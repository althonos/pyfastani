# https://gist.github.com/althonos/6914b896789d3f2078d1e6237642c35c

# --- Setuptools metadata ---------------------------------------------------

[metadata]
name = pyFastANI
version = attr: pyfastani.__version__
author = Martin Larralde
author_email = martin.larralde@embl.de
url = https://github.com/althonos/pyFastANI
description = Cython bindings and Python interface to FastANI.
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
platform = posix
keywords = bioinformatics, genomics, average, nucleotide, identity
classifier =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: C++
    Programming Language :: Cython
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Typing :: Typed
project_urls =
    Documentation = https://pyfastani.readthedocs.io/en/stable/
    Bug Tracker = https://github.com/althonos/pyFastANI/issues
    Changelog = https://github.com/althonos/pyFastANI/blob/master/CHANGELOG.md
    Coverage = https://codecov.io/gh/althonos/pyFastANI/
    Builds = https://github.com/althonos/pyFastANI/actions/
    Zenodo = https://doi.org/10.5281/zenodo.4270012
    PyPI = https://pypi.org/project/pyFastANI

[options]
zip_safe = false
packages = pyfastani
python_requires = >=3.6
test_suite = tests
include_package_data = true
setup_requires =
    setuptools >=46.4
    cython ~=0.29.16

[options.package_data]
pyfastani = py.typed, *.pyi


# --- Python tools configuration --------------------------------------------

[coverage:run]
plugins = Cython.Coverage

[coverage:report]
include = pyfastani/*.pyx
show_missing = true
exclude_lines =
    pragma: no cover
    if typing.TYPE_CHECKING:
    @abc.abstractmethod
    @abc.abstractproperty
    raise NotImplementedError
    return NotImplemented
    raise UnexpectedError
    raise AllocationError

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
