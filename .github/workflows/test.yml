name: Test

on:
  - push
  - pull_request

jobs:

  test_linux:
    name: Test (Linux)
    runs-on: ubuntu-22.04
    env:
      OS: Linux
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: v3.10
          python-impl: CPython
        - python-version: '3.11'
          python-release: v3.11
          python-impl: CPython
        - python-version: '3.12'
          python-release: v3.12
          python-impl: CPython
        - python-version: '3.13'
          python-release: v3.13
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip
      run: python -m pip install -U pip wheel setuptools
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build C extension in debug mode
      run: pip install -v -e . --no-build-isolation
    - name: Install numpy
      run: python -m pip install --prefer-binary numpy
      if: ${{ !startsWith(matrix.python-version, 'pypy') }}
    - name: Install tests requirements
      run: python -m pip install --prefer-binary -r src/pyfastani/tests/requirements.txt
    - name: Test package
      run: python -m unittest pyfastani.tests -vv

  test_osx:
    name: Test (OSX)
    runs-on: macos-12
    env:
      OS: OSX
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: v3.10
          python-impl: CPython
        - python-version: '3.11'
          python-release: v3.11
          python-impl: CPython
        - python-version: '3.12'
          python-release: v3.12
          python-impl: CPython
        - python-version: '3.13'
          python-release: v3.13
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup deployment target
      shell: bash
      if: ${{ startsWith(matrix.python-version, 'pypy') || matrix.python-version == '3.11' || matrix.python-version == '3.12' }}
      run: echo "MACOSX_DEPLOYMENT_TARGET=10.12" >> $GITHUB_ENV
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build C extension
      run: pip install -v -e . --no-build-isolation
    - name: Install numpy
      if: ${{ !startsWith(matrix.python-version, 'pypy')}}
      run: python -m pip install --prefer-binary numpy
    - name: Install tests requirements
      run: python -m pip install --prefer-binary -r src/pyfastani/tests/requirements.txt
    - name: Test package
      run: python -m unittest pyfastani.tests -vv

  # test_windows:
  #   name: Test (Windows)
  #   runs-on: windows-latest
  #   env:
  #     OS: Windows
  #   strategy:
  #     matrix:
  #       include:
  #       - python-version: 3.7
  #         python-release: v3.7
  #         python-impl: CPython
  #       - python-version: 3.8
  #         python-release: v3.8
  #         python-impl: CPython
  #       - python-version: 3.9
  #         python-release: v3.9
  #         python-impl: CPython
  #       - python-version: pypy-3.6
  #         python-release: v3.6
  #         python-impl: PyPy
  #       - python-version: pypy-3.7
  #         python-release: v3.7
  #         python-impl: PyPy
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     with:
  #       submodules: true
  #   - name: Cache built C files
  #     uses: actions/cache@v2
  #     with:
  #       path: build
  #       key: ${{ runner.os }}-build-${{ matrix.python-version }}
  #       restore-keys: ${{ runner.os }}-build-${{ matrix.python-version }}
  #   - name: Setup Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #       architecture: x64
  #   - name: Update pip
  #     run: python -m pip install -U pip wheel setuptools
  #   - name: Install Python requirements
  #     run: python -m pip install -r .github/workflows/requirements.txt
  #   - name: Build C extension
  #     run: python setup.py build_ext --inplace
  #   - name: Install tests requirements
  #     run: python -m pip install -r src/pyfastani/tests/requirements.txt
  #   - name: Test package
  #     run: python -m unittest pyfastani.tests -vv

  coverage_linux:
    name: Coverage (Linux)
    runs-on: ubuntu-latest
    needs: test_linux
    env:
      OS: Linux
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: 3.13
          python-release: v3.13
          python-impl: CPython
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build C extension in debug mode
      run: pip install -v -e . --no-build-isolation
    - name: Install numpy
      run: python -m pip install --prefer-binary numpy
    - name: Install tests requirements
      run: python -m pip install --prefer-binary -r src/pyfastani/tests/requirements.txt
    - name: Test with coverage
      run: python -m coverage run -m unittest pyfastani.tests -vv
    - name: Upload to Codecov
      uses: codecov/codecov-action@v3
      with:
        flags: ${{ matrix.python-impl }},${{ matrix.python-release }}
        env_vars: OS
        name: test-python-${{ matrix.python-version }}
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
        codecov_curl_args: "--globoff"
        verbose: true